{"version":3,"sources":["Redux/constants.js","Redux/reducers/cities.reducer.js","Redux/reducers/calendar.reducer.js","Redux/reducers/modals.reducer.js","Redux/reducers/weather.reducer.js","Redux/reducers/rootReducer.js","Redux/store.js","Redux/actions/calendar.actions.js","Redux/actions/modals.actions.js","Config/api.js","Redux/actions/weather.actions.js","Components/Modals/ModalWrapper.jsx","Components/Modals/AddNoteModal.jsx","Components/Modals/NotesModal.jsx","Components/CalendarWrapper/Index.jsx","Containers/CalendarWrapper.container.js","Redux/actions/cities.actions.js","Components/Modals/CitiesModal.jsx","Components/WeatherPane/Index.jsx","Containers/WeatherPane.container.js","App.js","serviceWorker.js","index.js"],"names":["GET_NOTES","initialState","cities","selectedCity","day","notes","addNote","currentWeather","weatherForecast","weatherHistory","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","calendar","constants","concat","toConsumableArray","filter","el","id","modals","weather","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","getInitialDay","dispatch","localStorage","getItem","Date","setDay","dateString","setItem","toString","getNotes","JSON","parse","formattedDate","moment","format","note","push","defineProperty","stringify","deleteNote","getState","formattedDay","parseInt","toggleModal","modal","modalState","api","axios","get","params","fields","latlng","key","q","join","dt","days","getCurrentWeather","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","sent","data","current","t0","console","error","stop","this","_x","apply","getWeatherHistory","_ref2","_callee2","_context2","forecast","forecastday","_x2","getWeatherForecast","_ref3","_callee3","_context3","_x3","ModalWrapper","Modal","className","caption","rest","objectWithoutProperties","react_default","createElement","onClick","index_es","icon","faTimesCircle","AddNoteModal","handleTextChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","onSubmit","rows","cols","onChange","Component","NotesModal","handleDelete","Fragment","map","data-id","CalendarWrapper","handleDayClick","handleModalToggle","currentTarget","dataset","handleNoteAdd","currentDay","handleNoteDelete","prevProps","_this2","data-modal","faBars","entry_default","onClickDay","showNavigation","tileDisabled","activeStartDate","date","currentDayDate","getMonth","Math","abs","diff","getDate","tileClassName","classes","addNoteModalIsVisible","Modals_ModalWrapper","AddNote","notesModalIsVisible","Notes","connect","bindActionCreators","getCities","setInitialCity","city","name","capital","setCity","CitiesModal","handleSelectChange","find","currentCity","index","WeatherPane","handleCityChange","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","alert","_this3","_this$props","todayIsSelected","weatherDay","currentDayMomentToToday","formattedCurrentDay","condition","src","alt","temp_c","avgtemp_c","text","faMapMarkerAlt","citiesModalIsVisible","Cities","PureComponent","App","WeatherPane_container","CalendarWrapper_container","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"4KASaA,EAAY,qBCPnBC,EAAe,CACnBC,OAAQ,GACRC,aAAc,YCFVF,EAAe,CACnBG,IAAK,GACLC,MAAO,ICFHJ,EAAe,CACnBK,SAAS,EACTD,OAAO,EACPH,QAAQ,GCHJD,EAAe,CACnBM,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,ICCHC,4BAAgB,CAC7BR,OJAa,WAAkC,IAAjCS,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IDRsB,oBCSpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEET,OAAQa,EAAOI,UAEnB,IDZ4B,0BCiB5B,IDhBoB,kBCiBlB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEER,aAAcY,EAAOI,UAEzB,QACE,OAAOR,IIjBXS,SHDa,WAAkC,IAAjCT,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IFF2B,2BEO3B,IFNmB,mBEOjB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEP,IAAKW,EAAOI,UAEhB,KAAKE,EACH,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEN,MAAOU,EAAOI,UAElB,IFdoB,oBEelB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEN,MAAK,GAAAiB,OAAAL,OAAAM,EAAA,EAAAN,CAAMN,EAAMN,OAAZ,CAAmBU,EAAOI,YAEnC,IFlBuB,uBEmBrB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEN,MAAOM,EAAMN,MAAMmB,OAAO,SAAAC,GAAE,OAAIA,EAAGC,KAAOX,EAAOI,YAErD,QACE,OAAOR,IG1BXgB,OFDa,WAAkC,IAAjChB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IHSwB,sBGRtB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EACAI,EAAOI,SAEd,QAAS,OAAOR,IELlBiB,QDFa,WAAkC,IAAjCjB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,IJI+B,8BIH7B,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEJ,eAAgBQ,EAAOI,UAE3B,IJCgC,+BIA9B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,gBAAiBO,EAAOI,UAE5B,IJL+B,8BIM7B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEF,eAAgBM,EAAOI,UAE3B,QACE,OAAOR,MErBEkB,wBAAYC,EAAa,GAAIC,8BACxCC,0BAAgBC,qECHPC,EAAgB,kBAAM,SAACC,GAClC,IAAM/B,EAAMgC,aAAaC,QAAQ,OAE/BF,EADE/B,EACO,CACPY,KPAyB,2BOCzBG,QAAS,IAAImB,KAAKlC,IAGX,CACPY,KPLyB,2BOMzBG,QAAS,IAAImB,SAKNC,EAAS,SAACC,GAAD,OAAgB,SAACL,GACrCC,aAAaK,QAAQ,MAAOD,EAAWE,YACvCP,EAAS,CACPnB,KPbmB,mBOcnBG,QAAS,IAAImB,KAAKE,OAITG,EAAW,SAACH,GAAD,OAAgB,SAACL,GACvC,IAAM9B,EAAQuC,KAAKC,MAAMT,aAAaC,QAAQ,UACxCS,EAAgBC,IAAOP,GAAYQ,OAAO,YAEhDb,EADI9B,EACK,CACPW,KAAMK,EACNF,QAASd,EAAMyC,GAAiBzC,EAAMyC,GAAiB,IAE3C,CACZ9B,KAAMK,EACNF,QAAS,OAKAb,EAAU,SAAC2C,EAAMT,GAAP,OAAsB,SAACL,GAC5C,IACIT,EADArB,EAAQuC,KAAKC,MAAMT,aAAaC,QAAQ,UAEtCS,EAAgBC,IAAOP,GAAYQ,OAAO,YAE5C3C,EACCA,EAAMyC,IACPpB,EAAKrB,EAAMyC,GAAezC,EAAMyC,GAAejC,OAAS,GAAGa,GAAK,EAChErB,EAAMyC,GAAeI,KAAK,CACxBD,OACAvB,SAGFA,EAAK,EACLrB,EAAMyC,GAAiB,CAAC,CACtBG,OACAvB,SAIJA,EAAK,EACLrB,EAAKY,OAAAkC,EAAA,EAAAlC,CAAA,GACF6B,EAAgB,CAAC,CAChBG,OACAvB,SAINU,aAAaK,QAAQ,QAASG,KAAKQ,UAAU/C,IAE7C8B,EAAS,CACPnB,KP9DoB,oBO+DpBG,QAAS,CACP8B,OACAvB,UAKO2B,EAAa,SAAA3B,GAAE,OAAI,SAACS,EAAUmB,GACzC,IAAMC,EAAeR,IAAOO,IAAWlC,SAAShB,KAAK4C,OAAO,YACtD3C,EAAQuC,KAAKC,MAAMT,aAAaC,QAAQ,UAC9ChC,EAAMkD,GAAgBlD,EAAMkD,GAAc/B,OAAO,SAAAC,GAAE,OAAIA,EAAGC,KAAO8B,SAAS9B,KACrErB,EAAMkD,GAAc1C,eAChBR,EAAMkD,GAEfnB,aAAaK,QAAQ,QAASG,KAAKQ,UAAU/C,IAE7C8B,EAAS,CACPnB,KP/EuB,uBOgFvBG,QAASqC,SAAS9B,OCzFT+B,EAAc,SAACC,GAAD,OAAW,SAACvB,EAAUmB,GAC/C,IAAMK,EAAaL,IAAW3B,OAAO+B,GACrCvB,EAAS,CACPnB,KRcwB,sBQbxBG,QAAQF,OAAAkC,EAAA,EAAAlC,CAAA,GAAGyC,GAASC,iDCHxBC,EACa,kBAAMC,IAAMC,IAAI,iDAAkD,CAC3EC,OAAQ,CACNC,OAAQ,0BAHdJ,EAOqB,SAACK,GAAD,OAAYJ,IAAMC,IAAI,wCAAyC,CAChFC,OAAQ,CACNG,IAAK,iCACLC,EAAGF,EAAOG,KAAK,SAVrBR,EAcqB,SAACK,EAAQzB,GAC1B,IAAI6B,EAAKtB,IAAOP,GAAYQ,OAAO,cACnC,OAAOa,IAAMC,IAAI,wCAAyC,CAC1DC,OAAQ,CACNG,IAAK,iCACLC,EAAGF,EAAOG,KAAK,KACfC,SApBNT,EAwBsB,SAACK,GAAD,OAAYJ,IAAMC,IAAI,yCAA0C,CAClFC,OAAQ,CACNG,IAAK,iCACLC,EAAGF,EAAOG,KAAK,KACfE,KAAM,MC5BCC,EAAoB,SAAAN,GAAM,sBAAAO,EAAAvD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAC,EAAAC,KAAI,SAAAC,EAAO1C,GAAP,IAAA2C,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAErBtB,EAAsBK,GAFD,OAEjCa,EAFiCE,EAAAG,KAGvChD,EAAS,CACPnB,KVO6B,8BUN7BG,QAAS2D,EAAIM,KAAKC,UALmBL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQvCO,QAAQC,MAARR,EAAAM,IARuC,yBAAAN,EAAAS,SAAAZ,EAAAa,KAAA,YAAJ,gBAAAC,GAAA,OAAAnB,EAAAoB,MAAAF,KAAA9E,YAAA,IAY1BiF,EAAoB,SAAC5B,EAAQzB,GAAT,sBAAAsD,EAAA7E,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAC,EAAAC,KAAwB,SAAAmB,EAAO5D,GAAP,IAAA2C,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAEnCtB,EAAsBK,EAAQzB,GAFK,OAE/CsC,EAF+CkB,EAAAb,KAGrDhD,EAAS,CACPnB,KVJ6B,8BUK7BG,QAAS2D,EAAIM,KAAKa,SAASC,YAAY,KALYF,EAAAd,KAAA,gBAAAc,EAAAf,KAAA,EAAAe,EAAAV,GAAAU,EAAA,SAQrDT,QAAQC,MAARQ,EAAAV,IARqD,yBAAAU,EAAAP,SAAAM,EAAAL,KAAA,YAAxB,gBAAAS,GAAA,OAAAL,EAAAF,MAAAF,KAAA9E,YAAA,IAYpBwF,EAAqB,SAAAnC,GAAM,sBAAAoC,EAAApF,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAC,EAAAC,KAAI,SAAA0B,EAAOnE,GAAP,IAAA2C,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAEtBtB,EAAuBK,GAFD,OAElCa,EAFkCyB,EAAApB,KAGxChD,EAAS,CACPnB,KVf8B,+BUgB9BG,QAAS2D,EAAIM,KAAKa,SAASC,cALWK,EAAArB,KAAA,gBAAAqB,EAAAtB,KAAA,EAAAsB,EAAAjB,GAAAiB,EAAA,SAQxChB,QAAQC,MAARe,EAAAjB,IARwC,yBAAAiB,EAAAd,SAAAa,EAAAZ,KAAA,YAAJ,gBAAAc,GAAA,OAAAH,EAAAT,MAAAF,KAAA9E,YAAA,4BCVzB6F,EAbM,SAAAjC,GAAA,IAAGkC,EAAHlC,EAAGkC,MAAOC,EAAVnC,EAAUmC,UAAWC,EAArBpC,EAAqBoC,QAASnD,EAA9Be,EAA8Bf,YAAgBoD,EAA9C5F,OAAA6F,EAAA,EAAA7F,CAAAuD,EAAA,sDACjBuC,EAAApC,EAAAqC,cAAA,OAAKL,UAAS,SAAArF,OAAWqF,IAEvBI,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,eACbI,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,gBACbI,EAAApC,EAAAqC,cAAA,MAAIL,UAAU,yBAAyBC,GACvCG,EAAApC,EAAAqC,cAAA,UAAQC,QAASxD,EAAakD,UAAU,8BAA6BI,EAAApC,EAAAqC,cAACE,EAAA,EAAD,CAAiBC,KAAMC,QAE9FL,EAAApC,EAAAqC,cAACN,EAAUG,MCiBJQ,6MAzBb1G,MAAQ,CACNsC,KAAM,MAGRqE,iBAAmB,SAAAC,GACjBC,EAAKC,SAAS,CACZxE,KAAMsE,EAAEG,OAAOC,WAInBC,aAAe,SAACL,GACdA,EAAEM,iBACFL,EAAKM,MAAMC,SAASP,EAAK7G,MAAMsC,+EAI/B,OACI8D,EAAApC,EAAAqC,cAAA,QAAML,UAAU,QACdI,EAAApC,EAAAqC,cAAA,YAAUgB,KAAK,KAAKC,KAAK,KAAKtB,UAAU,iBAAiBuB,SAAUxC,KAAK4B,iBAAkBK,MAAOjC,KAAK/E,MAAMsC,OAC5G8D,EAAApC,EAAAqC,cAAA,UAAQC,QAASvB,KAAKkC,aAAc5G,KAAK,SAAS2F,UAAU,aAA5D,oBArBiBwB,aCyBZC,EAvBI,SAAA5D,GAAA,IAAEnE,EAAFmE,EAAEnE,MAAOgI,EAAT7D,EAAS6D,aAAT,OACftB,EAAApC,EAAAqC,cAACD,EAAApC,EAAM2D,SAAP,KACEvB,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,2BACZtG,EAAMkI,IAAI,SAAAtF,GAAI,OACX8D,EAAApC,EAAAqC,cAAA,OAAK9C,IAAG,QAAA5C,OAAU2B,EAAKvB,IAAMiF,UAAU,qBACpC1D,EAAKA,KACN8D,EAAApC,EAAAqC,cAACE,EAAA,EAAD,CACID,QAASoB,EACTG,UAASvF,EAAKvB,GACdyF,KAAMC,IACNT,UAAU,yBAKpBtG,EAAMQ,QACRkG,EAAApC,EAAAqC,cAAA,QAAML,UAAU,iCAAhB,gECqFS8B,8MAlFbC,eAAiB,SAAAnB,GACfC,EAAKM,MAAMvF,OAAOgF,MAGpBoB,kBAAoB,SAACpB,GACD,kBAAPA,GAAmB,kBAAmBA,EACjDC,EAAKM,MAAMrE,YAAY8D,EAAEqB,cAAcC,QAAQnF,OAE7C8D,EAAKM,MAAMrE,YAAY8D,MAI3BuB,cAAgB,SAAC7F,GACfuE,EAAKM,MAAMxH,QAAQ2C,EAAMuE,EAAKM,MAAMiB,YACpCvB,EAAKmB,kBAAkB,cAGzBK,iBAAmB,SAACzB,GAClBC,EAAKM,MAAMzE,WAAWkE,EAAEqB,cAAcC,QAAQnH,wFA3B9CgE,KAAKoC,MAAM5F,2DAGM+G,GACbA,EAAUF,aAAerD,KAAKoC,MAAMiB,YACtCrD,KAAKoC,MAAMnF,SAAS+C,KAAKoC,MAAMiB,6CAyB1B,IAAAG,EAAAxD,KAEAqD,EAAcrD,KAAKoC,MAAnBiB,WACGhG,MAEV,OACIgE,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,YACbI,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,kBACbI,EAAApC,EAAAqC,cAAA,MAAIL,UAAU,iCAAiC5D,IAAOgG,GAAY/F,OAAO,eACzE+D,EAAApC,EAAAqC,cAAA,UAAQmC,aAAW,QAAQlC,QAASvB,KAAKiD,kBAAmBhC,UAAU,mCACpEI,EAAApC,EAAAqC,cAACE,EAAA,EAAD,CAAiBC,KAAMiC,MACvBrC,EAAApC,EAAAqC,cAAA,QAAML,UAAU,+BAA+BjB,KAAKoC,MAAMzH,MAAMQ,UAGpEkG,EAAApC,EAAAqC,cAACqC,EAAA1E,EAAD,CACI2E,WAAY5D,KAAKgD,eACjBa,gBAAgB,EAChB5B,MAAOoB,EACPS,aAAc,SAAAhF,GAA+B,IAA5BiF,EAA4BjF,EAA5BiF,gBAAiBC,EAAWlF,EAAXkF,KAC1BC,EAAiB,IAAIrH,KAAKyG,GAChC,OAAOU,EAAgBG,aAAeF,EAAKE,YACzCC,KAAKC,IAAI/G,IAAO2G,GAAMK,KAAKhH,MAAU,UAAY,GACjD4G,EAAeK,YAAcN,EAAKM,WAEtCC,cAAe,SAAAnE,GAAc,IAAX4D,EAAW5D,EAAX4D,KACVQ,EAAU,CAAC,uBACXP,EAAiB,IAAIrH,KAAKyG,GAOhC,OANIY,EAAeC,aAAeF,EAAKE,YAAcC,KAAKC,IAAI/G,IAAO2G,GAAMK,KAAKhH,MAAU,UAAY,IACpGmH,EAAQhH,KAAK,iCAEZyG,EAAeK,YAAcN,EAAKM,WAAaL,EAAeC,aAAeF,EAAKE,YACnFM,EAAQhH,KAAK,iCAERgH,EAAQ9F,KAAK,QAG1B2C,EAAApC,EAAAqC,cAAA,UAAQC,QAASvB,KAAKiD,kBAAmBQ,aAAW,UAAUxC,UAAU,6BAAxE,eACCjB,KAAKoC,MAAMqC,uBACVpD,EAAApC,EAAAqC,cAACoD,EAAD,CACEzD,UAAU,iBACVD,MAAQ2D,EACRzD,QAAO,mBAAAtF,OAAqByB,IAAOgG,GAAY/F,OAAO,eACtDS,YAAa,kBAAMyF,EAAKP,kBAAkB,YAC1CZ,SAAUrC,KAAKoD,gBAGlBpD,KAAKoC,MAAMwC,qBACVvD,EAAApC,EAAAqC,cAACoD,EAAD,CACEzD,UAAU,cACVD,MAAQ6D,EACR3D,QAAO,iBAAAtF,OAAmByB,IAAOgG,GAAY/F,OAAO,eACpDS,YAAa,kBAAMyF,EAAKP,kBAAkB,UAC1CtI,MAAOqF,KAAKoC,MAAMzH,MAClBgI,aAAc3C,KAAKsD,2BAtFHb,aCafqC,eAjBS,SAAAhG,GAAA,IAAEpD,EAAFoD,EAAEpD,SAAUO,EAAZ6C,EAAY7C,OAAZ,MAAyB,CAC/CoH,WAAY3H,EAAShB,IACrBC,MAAOe,EAASf,MAChBiK,oBAAqB3I,EAAOtB,MAC5B8J,sBAAuBxI,EAAOrB,UAGL,SAAC6B,GAAD,OAAcsI,6BAAmB,CAC1DvI,gBACAK,SACAkB,cACAnD,UACAqC,WACAU,aACAwC,qBACC1D,IAEYqI,CAA6C/B,ICpB/CiC,GAAY,iCAAAlG,EAAAvD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAC,EAAAC,KAAM,SAAAC,EAAO1C,GAAP,IAAA2C,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETtB,IAFS,OAErBkB,EAFqBE,EAAAG,KAG3BhD,EAAS,CACPnB,KhBPoB,oBgBQpBG,QAAS2D,EAAIM,OALYJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQ3BO,QAAQC,MAARR,EAAAM,IAR2B,yBAAAN,EAAAS,SAAAZ,EAAAa,KAAA,YAAN,gBAAAC,GAAA,OAAAnB,EAAAoB,MAAAF,KAAA9E,YAAA,IAYZ+J,GAAiB,SAAC1G,GAAD,OAAY,SAAC9B,GACzC,IAAMyI,EAAOhI,KAAKC,MAAMT,aAAaC,QAAQ,SACzCuI,GACFzI,EAAS,CACPnB,KhBlB0B,0BgBmB1BG,QAASyJ,IAEXzI,EAASiE,EAAmBwE,EAAK3G,SACjC9B,EAASoC,EAAkBqG,EAAK3G,WAEhC9B,EAAS,CACPnB,KhBzB0B,0BgB0B1BG,QAAS,CACP0J,KAAM,UACNC,QAAS,OACT7G,YAGJ9B,EAASiE,EAAmBnC,IAC5B9B,EAASoC,EAAkBN,OAKlB8G,GAAU,SAAAH,GAAI,OAAI,SAACzI,GAC9BC,aAAaK,QAAQ,OAAQG,KAAKQ,UAAUwH,IAE5CzI,EAAS,CACPnB,KhBzCoB,kBgB0CpBG,QAASyJ,MCHEI,8MAtCbrK,MAAQ,CACNiK,KAAM,MASRK,mBAAqB,SAAC1D,GACpBC,EAAKC,SAAS,CACZmD,KAAMpD,EAAKM,MAAM5H,OAAOgL,KAAK,SAAAN,GAAI,OAAIA,EAAKE,UAAYvD,EAAEG,OAAOC,aAInEC,aAAe,SAAAL,GACbA,EAAEM,iBACFL,EAAKM,MAAMC,SAASP,EAAK7G,MAAMiK,0FAdb,IAAA1B,EAAAxD,KAClBA,KAAK+B,SAAS,CACVmD,KAAMlF,KAAKoC,MAAM5H,OAAOgL,KAAK,SAAA3D,GAAC,OAAIA,EAAEuD,UAAY5B,EAAKpB,MAAMqD,iDAiB/D,OACIpE,EAAApC,EAAAqC,cAAA,YACED,EAAApC,EAAAqC,cAAA,UAAQkB,SAAUxC,KAAKuF,mBAAoBtD,MAAOjC,KAAK/E,MAAMiK,KAAKE,SAC/DpF,KAAKoC,MAAM5H,OAAOqI,IAAI,SAACqC,EAAMQ,GAAP,OACnBrE,EAAApC,EAAAqC,cAAA,UAAQ9C,IAAG,QAAA5C,OAAU8J,GAASzD,MAAOiD,EAAKE,SACvCF,EAAKE,YAId/D,EAAApC,EAAAqC,cAAA,UAAQC,QAASvB,KAAKkC,aAAc5G,KAAK,UAAzC,uBAlCgBmH,aC+FXkD,8MAlEb1C,kBAAoB,SAACpB,GACD,kBAAPA,GAAmB,kBAAmBA,EAC/CC,EAAKM,MAAMrE,YAAY8D,EAAEqB,cAAcC,QAAQnF,OAE/C8D,EAAKM,MAAMrE,YAAY8D,MAI3B+D,iBAAmB,SAACV,GAAS,IACpB7B,EAAcvB,EAAKM,MAAnBiB,WACPvB,EAAKM,MAAMiD,QAAQH,GACnBpD,EAAKmB,kBAAkB,UACvBnB,EAAKM,MAAMvD,kBAAkBqG,EAAK3G,QAClCuD,EAAKM,MAAM1B,mBAAmBwE,EAAK3G,QAC/BlB,IAAOgG,GAAYgB,KAAKhH,MAAU,QAAU,GAAGyE,EAAKM,MAAMjC,kBAAkB+E,EAAK3G,OAAQ8E,uFApC3E,IAAAG,EAAAxD,KAClBA,KAAKoC,MAAM4C,YAEP,gBAAiBa,UACnBA,UAAUC,YAAYC,mBAClB,SAAAC,GAAY,IACFC,EAAWD,EAAXC,OACRzC,EAAKpB,MAAM6C,eAAe,CAACgB,EAAOC,SAAUD,EAAOE,aAClD,kBAAM3C,EAAKpB,MAAM6C,eAAe,CAAC,GAAG,OACtCmB,MAAM,qFAGM,IACZ/C,EAAcrD,KAAKoC,MAAnBiB,WACHrD,KAAKoC,MAAMqD,YAAYlH,QACvByB,KAAKoC,MAAMrH,eAAeiJ,OAAS3G,IAAOgG,GAAY/F,OAAO,eAC1DD,IAAOgG,GAAYgB,KAAKhH,MAAU,QAAU,GACjD2C,KAAKoC,MAAMjC,kBAAkBH,KAAKoC,MAAMqD,YAAYlH,OAAQ8E,oCAsBvD,IAAAgD,EAAArG,KAAAsG,EAE+DtG,KAAKoC,MAApEiB,EAFAiD,EAEAjD,WAAYxI,EAFZyL,EAEYzL,eAAgBC,EAF5BwL,EAE4BxL,gBAAiBC,EAF7CuL,EAE6CvL,eAC9CwL,EAAgE,IAA9ClJ,IAAOgG,GAAYgB,KAAKhH,MAAU,QACpDmJ,EAAc,WAClB,IAAMC,EAA0BpJ,IAAOgG,GAAYgB,KAAKhH,MAAU,QAC5DqJ,EAAsBrJ,IAAOgG,GAAY/F,OAAO,cACtD,OAAgC,IAA5BmJ,EAAsC5L,EACtC4L,EAA0B,EAAU1L,EAAeL,IACnD+L,EAA0B,GAAK3L,EAAgBK,OAAeL,EAAgB0K,KAAK,SAAAzJ,GAAE,OAAIA,EAAGiI,OAAS0C,IAAqBhM,SAA9H,EALkB,GAQpB,OACI2G,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,gBACbI,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,sBACbI,EAAApC,EAAAqC,cAAA,MAAIL,UAAU,0BAA0B5D,IAAO2C,KAAKoC,MAAMiB,YAAY/F,OAAO,SAC7E+D,EAAApC,EAAAqC,cAAA,KAAGL,UAAU,sBAAsB5D,IAAO2C,KAAKoC,MAAMiB,YAAY/F,OAAO,mBAE1E+D,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,0BAEVuF,GAAcA,EAAWG,WACxBtF,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,0BACbI,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,8BAA8B2F,IAAKJ,EAAWG,UAAUlF,KAAMoF,IAAI,KACjFxF,EAAApC,EAAAqC,cAAA,KAAGL,UAAU,sBAAsBnD,SAASyI,EAAkBC,EAAWM,OAASN,EAAWO,WAAW1F,EAAApC,EAAAqC,cAAA,kBAExGD,EAAApC,EAAAqC,cAAA,KAAGL,UAAU,gCAAgCuF,EAAWG,UAAUK,OAGxE3F,EAAApC,EAAAqC,cAAA,UAAQC,QAASvB,KAAKiD,kBAAmBQ,aAAW,SAASxC,UAAU,kCACrEI,EAAApC,EAAAqC,cAACE,EAAA,EAAD,CAAiBC,KAAMwF,MADzB,GAAArL,OAEMoE,KAAKoC,MAAMqD,YAAYL,QAF7B,MAAAxJ,OAEyCoE,KAAKoC,MAAMqD,YAAYN,QAGjEnF,KAAKoC,MAAM8E,sBACZ7F,EAAApC,EAAAqC,cAACoD,EAAD,CACIzD,UAAU,eACVlD,YAAa,kBAAMsI,EAAKpD,kBAAkB,WAC1CjC,MAAOmG,GACPjG,QAAQ,+BACR1G,OAAQwF,KAAKoC,MAAM5H,OACnBiL,YAAazF,KAAKoC,MAAMqD,YAAYL,QACpC/C,SAAUrC,KAAK4F,2BAlFHwB,iBCoBXtC,eApBS,SAAAhG,GAAA,IAAGpD,EAAHoD,EAAGpD,SAAUlB,EAAbsE,EAAatE,OAAQyB,EAArB6C,EAAqB7C,OAAQC,EAA7B4C,EAA6B5C,QAA7B,MAA4C,CAClEmH,WAAY3H,EAAShB,IACrBF,OAAQA,EAAOA,OACfiL,YAAajL,EAAOC,aACpByM,qBAAsBjL,EAAOzB,OAC7BK,eAAgBqB,EAAQrB,eACxBC,gBAAiBoB,EAAQpB,gBACzBC,eAAgBmB,EAAQnB,iBAGC,SAAC0B,GAAD,OAAcsI,6BAAmB,CAC1DC,aACAC,kBACAI,WACAtH,cACAc,oBACAsB,oBACAO,sBACCjE,IAEYqI,CAA6Ca,ICR7C0B,oLAXX,OACIhG,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,OACbI,EAAApC,EAAAqC,cAAA,OAAKL,UAAU,iBACbI,EAAApC,EAAAqC,cAACgG,GAAD,MACAjG,EAAApC,EAAAqC,cAACiG,GAAD,eAPM9E,aCOE+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECVNC,IAASC,OACLzG,EAAApC,EAAAqC,cAACyG,EAAA,EAAD,CAAUC,MAAOA,GACf3G,EAAApC,EAAAqC,cAAC2G,GAAD,OAEFC,SAASC,eAAe,SDqHtB,kBAAmBtC,WACrBA,UAAUuC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.890a48ab.chunk.js","sourcesContent":["//CITIES\nexport const GET_CITIES = 'cities/GET_CITIES';\nexport const SET_INITIAL_CITY = 'cities/SET_INITIAL_CITY';\nexport const SET_CITY = 'cities/SET_CITY';\n\n\n//CALENDAR\nexport const GET_INITIAL_DAY = 'calendar/GET_INITIAL_DAY';\nexport const SET_DAY = 'calendar/SET_DAY';\nexport const GET_NOTES = 'calendar/GET_NOTES';\nexport const ADD_NOTE = 'calendar/ADD_NOTE';\nexport const DELETE_NOTE = 'calendar/DELETE_NOTE';\n\n//WEATHER\nexport const GET_CURRENT_WEATHER = 'weather/GET_CURRENT_WEATHER';\nexport const GET_WEATHER_HISTORY = 'weather/GET_WEATHER_HISTORY';\nexport const GET_WEATHER_FORECAST = 'weather/GET_WEATHER_FORECAST';\n\n//MODALS\nexport const TOGGLE_MODAL = 'modals/TOGGLE_MODAL';","import * as constants from '../constants';\n\nconst initialState = {\n  cities: [],\n  selectedCity: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.GET_CITIES:\n      return {\n        ...state,\n        cities: action.payload\n      };\n    case constants.SET_INITIAL_CITY:\n      return {\n        ...state,\n        selectedCity: action.payload,\n      };\n    case constants.SET_CITY:\n      return {\n        ...state,\n        selectedCity: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n","import * as constants from '../constants';\n\nconst initialState = {\n  day: '',\n  notes: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.GET_INITIAL_DAY:\n      return {\n        ...state,\n        day: action.payload,\n      };\n    case constants.SET_DAY:\n      return {\n        ...state,\n        day: action.payload,\n      };\n    case constants.GET_NOTES:\n      return {\n        ...state,\n        notes: action.payload\n      };\n    case constants.ADD_NOTE:\n      return {\n        ...state,\n        notes: [...state.notes, action.payload]\n      };\n    case constants.DELETE_NOTE:\n      return {\n        ...state,\n        notes: state.notes.filter(el => el.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n}","import {TOGGLE_MODAL} from \"../constants\";\n\nconst initialState = {\n  addNote: false,\n  notes: false,\n  cities: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_MODAL:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default: return state;\n  }\n}","import {GET_CURRENT_WEATHER, GET_WEATHER_HISTORY, GET_WEATHER_FORECAST} from \"../constants\";\n\nconst initialState = {\n  currentWeather: {},\n  weatherForecast: [],\n  weatherHistory: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CURRENT_WEATHER:\n      return {\n        ...state,\n        currentWeather: action.payload\n      };\n    case GET_WEATHER_FORECAST:\n      return {\n        ...state,\n        weatherForecast: action.payload,\n      };\n    case GET_WEATHER_HISTORY:\n      return {\n        ...state,\n        weatherHistory: action.payload\n      };\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport cities from './cities.reducer'\nimport calendar from './calendar.reducer'\nimport modals from './modals.reducer'\nimport weather from './weather.reducer'\n\nexport default combineReducers({\n  cities,\n  calendar,\n  modals,\n  weather,\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/rootReducer';\n\nexport default createStore(rootReducer, {}, composeWithDevTools(\n    applyMiddleware(thunk)\n));","import * as constants from '../constants';\nimport moment from 'moment';\n\nexport const getInitialDay = () => (dispatch) => {\n  const day = localStorage.getItem('day');\n  if (day) {\n    dispatch({\n      type: constants.GET_INITIAL_DAY,\n      payload: new Date(day),\n    })\n  } else {\n    dispatch({\n      type: constants.GET_INITIAL_DAY,\n      payload: new Date(),\n    })\n  }\n};\n\nexport const setDay = (dateString) => (dispatch) => {\n  localStorage.setItem('day', dateString.toString());\n  dispatch({\n    type: constants.SET_DAY,\n    payload: new Date(dateString),\n  })\n};\n\nexport const getNotes = (dateString) => (dispatch) => {\n  const notes = JSON.parse(localStorage.getItem('notes'));\n  const formattedDate = moment(dateString).format('DD/MM/YY');\n  if (notes)\n  dispatch({\n    type: constants.GET_NOTES,\n    payload: notes[formattedDate] ? notes[formattedDate] : [],\n  });\n  else dispatch({\n    type: constants.GET_NOTES,\n    payload: [],\n  })\n};\n\n\nexport const addNote = (note, dateString) => (dispatch) => {\n  let notes = JSON.parse(localStorage.getItem('notes'));\n  let id;\n  const formattedDate = moment(dateString).format('DD/MM/YY');\n\n  if (notes){\n    if(notes[formattedDate]){\n      id = notes[formattedDate][notes[formattedDate].length - 1].id + 1;\n      notes[formattedDate].push({\n        note,\n        id\n      })\n    } else {\n      id = 1;\n      notes[formattedDate] = [{\n        note,\n        id\n      }]\n    }\n  } else {\n    id = 1;\n    notes = {\n      [formattedDate]: [{\n        note,\n        id,\n      }]\n    }\n  }\n  localStorage.setItem('notes', JSON.stringify(notes));\n\n  dispatch({\n    type: constants.ADD_NOTE,\n    payload: {\n      note,\n      id,\n    },\n  })\n};\n\nexport const deleteNote = id => (dispatch, getState) => {\n  const formattedDay = moment(getState().calendar.day).format(\"DD/MM/YY\");\n  const notes = JSON.parse(localStorage.getItem('notes'));\n  notes[formattedDay] = notes[formattedDay].filter(el => el.id !== parseInt(id));\n  if (!notes[formattedDay].length) {\n    delete notes[formattedDay];\n  }\n  localStorage.setItem('notes', JSON.stringify(notes));\n\n  dispatch({\n    type: constants.DELETE_NOTE,\n    payload: parseInt(id),\n  })\n}","import { TOGGLE_MODAL } from \"../constants\";\n\nexport const toggleModal = (modal) => (dispatch, getState) => {\n  const modalState = getState().modals[modal];\n  dispatch({\n    type: TOGGLE_MODAL,\n    payload: {[modal]: !modalState},\n  })\n\n};","import axios from 'axios'\nimport moment from 'moment'\n\nexport default {\n  getCities: () => axios.get('https://restcountries.eu/rest/v2/region/europe', {\n    params: {\n      fields: 'capital;latlng;name'\n    }\n  }),\n\n  getCurrentWeather: (latlng) => axios.get('https://api.apixu.com/v1/current.json', {\n    params: {\n      key: '1dc82a4d18514ec386672253182612',\n      q: latlng.join(','),\n    },\n  }),\n\n  getWeatherHistory: (latlng, dateString) => {\n    let dt = moment(dateString).format('YYYY-MM-DD');\n    return axios.get('https://api.apixu.com/v1/history.json', {\n    params: {\n      key: '1dc82a4d18514ec386672253182612',\n      q: latlng.join(','),\n      dt\n    }\n  })},\n\n  getWeatherForecast: (latlng) => axios.get('https://api.apixu.com/v1/forecast.json', {\n    params: {\n      key: '1dc82a4d18514ec386672253182612',\n      q: latlng.join(','),\n      days: 7,\n    }\n  })\n};\n","import { GET_CURRENT_WEATHER, GET_WEATHER_FORECAST, GET_WEATHER_HISTORY } from \"../constants\";\nimport api from '../../Config/api'\n\nexport const getCurrentWeather = latlng => async (dispatch) => {\n  try {\n    const res = await api.getCurrentWeather(latlng);\n    dispatch({\n      type: GET_CURRENT_WEATHER,\n      payload: res.data.current,\n    })\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const getWeatherHistory = (latlng, dateString) => async (dispatch) => {\n  try {\n    const res = await api.getWeatherHistory(latlng, dateString);\n    dispatch({\n      type: GET_WEATHER_HISTORY,\n      payload: res.data.forecast.forecastday[0],\n    })\n  } catch (e) {\n    console.error(e)\n  }\n};\n\nexport const getWeatherForecast = latlng => async (dispatch) => {\n  try {\n    const res = await api.getWeatherForecast(latlng);\n    dispatch({\n      type: GET_WEATHER_FORECAST,\n      payload: res.data.forecast.forecastday,\n    })\n  } catch (e) {\n    console.error(e)\n  }\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst ModalWrapper = ({ Modal, className, caption, toggleModal, ...rest }) => (\n    <div className={`modal ${className}`}>\n\n      <div className=\"modal-inner\">\n        <div className=\"modal-header\">\n          <h3 className=\"modal-header__caption\">{caption}</h3>\n          <button onClick={toggleModal} className=\"modal-header__close-button\"><FontAwesomeIcon icon={faTimesCircle}/></button>\n        </div>\n        <Modal {...rest} />\n      </div>\n    </div>\n);\n\nexport default ModalWrapper;","import React, {Component} from 'react';\n\nclass AddNoteModal extends Component {\n\n  state = {\n    note: '',\n  };\n\n  handleTextChange = e => {\n    this.setState({\n      note: e.target.value\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.note);\n  };\n\n  render() {\n    return (\n        <form className=\"form\">\n          <textarea rows=\"10\" cols=\"50\" className=\"form__textarea\" onChange={this.handleTextChange} value={this.state.note}/>\n          <button onClick={this.handleSubmit} type=\"submit\" className=\"form__btn\">Add Note</button>\n        </form>\n    );\n  }\n}\n\nexport default AddNoteModal;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons'\n\nconst NotesModal = ({notes, handleDelete}) => (\n    <React.Fragment>\n      <div className=\"notes-modal__notes-list\">\n        {notes.map(note => (\n            <div key={`note-${note.id}`} className=\"notes-modal__note\">\n              {note.note}\n              <FontAwesomeIcon\n                  onClick={handleDelete}\n                  data-id={note.id}\n                  icon={faTimesCircle}\n                  className=\"note-delete-btn\"\n              />\n            </div>\n        ))}\n      </div>\n      {!notes.length &&\n      <span className=\"notes-modal__no-notes-message\">\n              There is currently no notes for this date\n          </span>\n      }\n    </React.Fragment>\n);\n\nexport default NotesModal;","import React, {Component} from 'react';\nimport moment from 'moment'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\nimport Modal from '../Modals/ModalWrapper';\nimport AddNote from '../Modals/AddNoteModal';\nimport Notes from '../Modals/NotesModal';\n\nimport Calendar from 'react-calendar'\n\n\nclass CalendarWrapper extends Component {\n\n  componentDidMount() {\n    this.props.getInitialDay();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentDay !== this.props.currentDay) {\n      this.props.getNotes(this.props.currentDay)\n    }\n  }\n\n  handleDayClick = e => {\n    this.props.setDay(e);\n  };\n\n  handleModalToggle = (e) => {\n    if (typeof(e) === 'object' && 'currentTarget' in e){\n    this.props.toggleModal(e.currentTarget.dataset.modal);\n    } else {\n      this.props.toggleModal(e);\n    }\n  };\n\n  handleNoteAdd = (note) => {\n    this.props.addNote(note, this.props.currentDay);\n    this.handleModalToggle('addNote');\n  };\n\n  handleNoteDelete = (e) => {\n    this.props.deleteNote(e.currentTarget.dataset.id);\n  };\n\n  render() {\n\n    const {currentDay} = this.props;\n    let now = moment();\n\n    return (\n        <div className=\"calendar\">\n          <div className=\"calendar-title\">\n            <h2 className=\"calendar-title__current-month\">{moment(currentDay).format(\"MMMM, YYYY\")}</h2>\n            <button data-modal=\"notes\" onClick={this.handleModalToggle} className=\"calendar-title__notes-modal-btn\">\n              <FontAwesomeIcon icon={faBars}/>\n              <span className=\"calendar-title__notes-count\">{this.props.notes.length}</span>\n            </button>\n          </div>\n          <Calendar\n              onClickDay={this.handleDayClick}\n              showNavigation={false}\n              value={currentDay}\n              tileDisabled={({ activeStartDate, date }) => {\n                const currentDayDate = new Date(currentDay);\n                return activeStartDate.getMonth() !== date.getMonth() ||\n                  Math.abs(moment(date).diff(moment(), 'days')) >= 7 ||\n                  currentDayDate.getDate() === date.getDate()}\n              }\n              tileClassName={({ date }) => {\n                const classes = ['react-calendar__day'];\n                const currentDayDate = new Date(currentDay);\n                if (currentDayDate.getMonth() !== date.getMonth() || Math.abs(moment(date).diff(moment(), 'days')) >= 7) {\n                  classes.push('react-calendar__day--disabled');\n                }\n                if(currentDayDate.getDate() === date.getDate() && currentDayDate.getMonth() === date.getMonth()) {\n                  classes.push('react-calendar__day--selected')\n                }\n                return classes.join(' ');\n              }}\n          />\n          <button onClick={this.handleModalToggle} data-modal=\"addNote\" className=\"calendar__add-note-button\">+ Add Notes</button>\n          {this.props.addNoteModalIsVisible &&\n            <Modal\n              className=\"add-note-modal\"\n              Modal={ AddNote }\n              caption={`Add note to the ${moment(currentDay).format(\"DD of MMMM\")}`}\n              toggleModal={() => this.handleModalToggle('addNote')}\n              onSubmit={this.handleNoteAdd}\n            />\n          }\n          {this.props.notesModalIsVisible &&\n            <Modal\n              className=\"notes-modal\"\n              Modal={ Notes }\n              caption={`Notes for the ${moment(currentDay).format(\"DD of MMMM\")}`}\n              toggleModal={() => this.handleModalToggle('notes')}\n              notes={this.props.notes}\n              handleDelete={this.handleNoteDelete}\n            />\n          }\n        </div>\n    );\n  }\n}\n\nexport default CalendarWrapper;","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getInitialDay, setDay, addNote, getNotes, deleteNote } from \"../Redux/actions/calendar.actions\";\nimport { toggleModal } from \"../Redux/actions/modals.actions\";\nimport { getWeatherHistory } from \"../Redux/actions/weather.actions\";\nimport CalendarWrapper from '../Components/CalendarWrapper/Index';\n\nconst mapStateToProps = ({calendar, modals}) => ({\n  currentDay: calendar.day,\n  notes: calendar.notes,\n  notesModalIsVisible: modals.notes,\n  addNoteModalIsVisible: modals.addNote,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  getInitialDay,\n  setDay,\n  toggleModal,\n  addNote,\n  getNotes,\n  deleteNote,\n  getWeatherHistory,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarWrapper);","import * as constants from '../constants';\nimport api from '../../Config/api';\nimport { getWeatherForecast, getCurrentWeather } from './weather.actions';\n\nexport const getCities = () => async (dispatch) => {\n  try {\n    const res = await api.getCities();\n    dispatch({\n      type: constants.GET_CITIES,\n      payload: res.data,\n    })\n  } catch (e) {\n    console.error(e)\n  }\n};\n\nexport const setInitialCity = (latlng) => (dispatch) => {\n  const city = JSON.parse(localStorage.getItem('city'));\n  if (city) {\n    dispatch({\n      type: constants.SET_INITIAL_CITY,\n      payload: city,\n    });\n    dispatch(getWeatherForecast(city.latlng));\n    dispatch(getCurrentWeather(city.latlng))\n  } else {\n    dispatch({\n      type: constants.SET_INITIAL_CITY,\n      payload: {\n        name: \"Ukraine\",\n        capital: \"Kiev\",\n        latlng,\n      }\n    });\n    dispatch(getWeatherForecast(latlng));\n    dispatch(getCurrentWeather(latlng))\n\n  }\n};\n\nexport const setCity = city => (dispatch) => {\n  localStorage.setItem('city', JSON.stringify(city));\n\n  dispatch({\n    type: constants.SET_CITY,\n    payload: city\n  })\n};","import React, {Component} from 'react';\n\nclass CitiesModal extends Component {\n\n  state = {\n    city: ''\n  };\n\n  componentDidMount() {\n    this.setState({\n        city: this.props.cities.find(e => e.capital === this.props.currentCity),\n    })\n  }\n\n  handleSelectChange = (e) => {\n    this.setState({\n      city: this.props.cities.find(city => city.capital === e.target.value),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.city)\n  };\n\n\n  render() {\n    return (\n        <form>\n          <select onChange={this.handleSelectChange} value={this.state.city.capital}>\n            {this.props.cities.map((city, index) => (\n                <option key={`city-${index}`} value={city.capital}>\n                  {city.capital}\n                </option>\n            ))}\n          </select>\n          <button onClick={this.handleSubmit} type=\"submit\">Get Weather</button>\n        </form>\n    );\n  }\n}\n\nexport default CitiesModal;","import React, {PureComponent} from 'react';\nimport moment from 'moment';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons'\nimport Modal from '../Modals/ModalWrapper';\nimport Cities from '../Modals/CitiesModal';\n\nclass WeatherPane extends PureComponent {\n\n  componentDidMount() {\n    this.props.getCities();\n\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n          position => {\n            const { coords } = position;\n            this.props.setInitialCity([coords.latitude, coords.longitude]);\n          }, () => this.props.setInitialCity([49,32]));\n    } else alert(\"Please switch your browser to chrome\")\n  }\n\n  componentDidUpdate() {\n    const {currentDay} = this.props;\n    if (this.props.currentCity.latlng &&\n        this.props.weatherHistory.date !== moment(currentDay).format(\"YYYY-MM-DD\")\n        && moment(currentDay).diff(moment(), 'days') < 0) {\n      this.props.getWeatherHistory(this.props.currentCity.latlng, currentDay);\n    }\n  }\n\n\n  handleModalToggle = (e) => {\n    if (typeof(e) === 'object' && 'currentTarget' in e) {\n      this.props.toggleModal(e.currentTarget.dataset.modal);\n    } else {\n      this.props.toggleModal(e);\n    }\n  };\n\n  handleCityChange = (city) => {\n    const {currentDay} = this.props;\n    this.props.setCity(city);\n    this.handleModalToggle('cities');\n    this.props.getCurrentWeather(city.latlng);\n    this.props.getWeatherForecast(city.latlng);\n    if (moment(currentDay).diff(moment(), 'days') < 0) this.props.getWeatherHistory(city.latlng, currentDay)\n  };\n\n  render() {\n\n    const {currentDay, currentWeather, weatherForecast, weatherHistory} = this.props;\n    const todayIsSelected = moment(currentDay).diff(moment(), 'days') === 0;\n    const weatherDay = (() => {\n      const currentDayMomentToToday = moment(currentDay).diff(moment(), 'days');\n      const formattedCurrentDay = moment(currentDay).format(\"YYYY-MM-DD\");\n      if (currentDayMomentToToday === 0) return currentWeather;\n      if (currentDayMomentToToday < 0) return weatherHistory.day;\n      if (currentDayMomentToToday > 0 && weatherForecast.length) return weatherForecast.find(el => el.date === formattedCurrentDay).day;\n    })();\n\n    return (\n        <div className=\"weather-pane\">\n          <div className=\"weather-pane__head\">\n            <h2 className=\"weather-pane__week-day\">{moment(this.props.currentDay).format(\"dddd\")}</h2>\n            <p className=\"weather-pane__date\">{moment(this.props.currentDay).format(\"MMMM DD, YYYY\")}</p>\n          </div>\n          <div className=\"weather-pane__footer\">\n\n            {!!weatherDay && weatherDay.condition && (\n                <div className=\"weather-pane__forecast\">\n                  <img className=\"weather-pane__condition-img\" src={weatherDay.condition.icon} alt=\"\"/>\n                  <p className=\"weather-pane__temp\">{parseInt(todayIsSelected ? weatherDay.temp_c : weatherDay.avgtemp_c)}<span>c</span>\n                  </p>\n                  <p className=\"weather-pane__condition-text\">{weatherDay.condition.text}</p>\n                </div>\n            )}\n            <button onClick={this.handleModalToggle} data-modal=\"cities\" className=\"weather-pane__current-city-btn\">\n              <FontAwesomeIcon icon={faMapMarkerAlt}/>\n              {`${this.props.currentCity.capital}, ${this.props.currentCity.name}`}\n            </button>\n          </div>\n          {this.props.citiesModalIsVisible &&\n          <Modal\n              className=\"cities-modal\"\n              toggleModal={() => this.handleModalToggle('cities')}\n              Modal={Cities}\n              caption=\"Select a city to get weather\"\n              cities={this.props.cities}\n              currentCity={this.props.currentCity.capital}\n              onSubmit={this.handleCityChange}\n          />\n          }\n        </div>\n    );\n  }\n}\n\nexport default WeatherPane;","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getCities, setInitialCity, setCity } from \"../Redux/actions/cities.actions\";\nimport { toggleModal } from \"../Redux/actions/modals.actions\";\nimport { getCurrentWeather, getWeatherHistory, getWeatherForecast } from \"../Redux/actions/weather.actions\";\nimport WeatherPane from '../Components/WeatherPane/Index'\n\nconst mapStateToProps = ({ calendar, cities, modals, weather }) => ({\n  currentDay: calendar.day,\n  cities: cities.cities,\n  currentCity: cities.selectedCity,\n  citiesModalIsVisible: modals.cities,\n  currentWeather: weather.currentWeather,\n  weatherForecast: weather.weatherForecast,\n  weatherHistory: weather.weatherHistory,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  getCities,\n  setInitialCity,\n  setCity,\n  toggleModal,\n  getCurrentWeather,\n  getWeatherHistory,\n  getWeatherForecast,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherPane);","import React, {Component} from 'react';\n\nimport CalendarWrapper from './Containers/CalendarWrapper.container'\nimport WeatherPane from './Containers/WeatherPane.container'\n\nclass App extends Component {\n\n  render() {\n    return (\n        <div className=\"App\">\n          <div className=\"inner-wrapper\">\n            <WeatherPane/>\n            <CalendarWrapper/>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles.scss'\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}